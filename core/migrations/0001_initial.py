# Generated by Django 3.2.9 on 2021-11-30 15:52

import core.models.article_img
import core.models.user
import core.models.user_img
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'user',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', core.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('acc_bank_code', models.CharField(max_length=20)),
                ('acc_bank_name', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accbank_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accbank_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accbank_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'acc_bank',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('article_title', models.CharField(max_length=300)),
                ('is_publish', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'article',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ArticleImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('path', models.ImageField(upload_to=core.models.article_img.image_directory_path)),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleimg_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleimg_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleimg_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'article_img',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('path', models.ImageField(upload_to=core.models.user_img.image_directory_path)),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='userimg_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='userimg_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='userimg_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_img',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('topic_name', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='topic_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='topic_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='topic_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'topic',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StockCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('stock_code', models.CharField(max_length=20)),
                ('stock_symbol', models.CharField(max_length=20)),
                ('stock_name', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='stockcounter_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='stockcounter_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='stockcounter_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stock_counter',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('bio', models.CharField(max_length=500)),
                ('commission_pct', models.IntegerField(default=30)),
                ('bank_account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_account_no', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=50, null=True)),
                ('acc_bank', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='author_related', to='core.accbank')),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='author_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='author_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='author_update_related', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'author',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255)),
                ('model_id', models.IntegerField()),
                ('action', models.CharField(max_length=10)),
                ('log', models.TextField()),
                ('ip_address', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='audittrail_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_trail',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ArticleParagraph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('order', models.IntegerField(default=0)),
                ('type', models.CharField(max_length=10)),
                ('content', models.TextField(blank=True, null=True)),
                ('is_supporter_view_only', models.BooleanField(default=False)),
                ('article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paragraphs', to='core.article')),
                ('article_img', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleparagraph_related', to='core.articleimg')),
                ('created_by', models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleparagraph_create_related', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleparagraph_delete_related', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articleparagraph_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'article_paragraph',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articles', to='core.author'),
        ),
        migrations.AddField(
            model_name='article',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', db_constraint=False, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='article_create_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='deleted_by',
            field=models.ForeignKey(db_column='deleted_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='article_delete_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='updated_by',
            field=models.ForeignKey(db_column='updated_by', db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='article_update_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='user_img',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_related', to='core.userimg'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
